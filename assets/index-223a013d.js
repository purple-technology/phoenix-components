import{e as a}from"./iframe-22864007.js";import{u as y,F as R,S as g}from"./useFormControl-ca195f92.js";const b=({size:t="md",type:i="text",testId:s="TextInput",label:r,success:l,warning:o,error:d,contentRight:u,helperText:m,className:c,ref:p,...e})=>{const{focused:n,thisOnFocus:f,thisOnBlur:T}=y(e.onFocus,e.onBlur);return a.createElement(R,{label:r,success:l,warning:o,error:d,contentRight:u,helperText:m,className:c,size:t,disabled:e.disabled,filled:!!e.value,focused:n,minimal:e.minimal,testId:s},a.createElement(g,{...e,type:i,onFocus:f,onBlur:T,focused:n,disabled:e.disabled??!1,$size:t,ref:p}))};b.__docgenInfo={description:"`TextInput` component supports all props from `InputHTMLAttributes<HTMLInputElement>` interface.",methods:[],displayName:"TextInput",props:{testId:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'TextInput'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:""},label:{required:!1,tsType:{name:"string"},description:"Text displayed inside the input field"},success:{required:!1,tsType:{name:"boolean"},description:"Green border and checkmark visible"},warning:{required:!1,tsType:{name:"union",raw:"ReactElement | string",elements:[{name:"ReactElement"},{name:"string"}]},description:"Show yellow warning text and icon under the input"},error:{required:!1,tsType:{name:"union",raw:"ReactElement | string | boolean",elements:[{name:"ReactElement"},{name:"string"},{name:"boolean"}]},description:"Show red error text and icon under the input"},contentRight:{required:!1,tsType:{name:"union",raw:"string | React.ReactNode",elements:[{name:"string"},{name:"ReactReactNode",raw:"React.ReactNode"}]},description:"Content to display on the right in LTR and on the left in RTL mode"},helperText:{required:!1,tsType:{name:"string"},description:"Helper text to display when input is focused"},size:{required:!1,tsType:{name:"Sizing"},description:"",defaultValue:{value:"'md'",computed:!1}},disabled:{required:!1,tsType:{name:"boolean"},description:""},focused:{required:!1,tsType:{name:"boolean"},description:""},minimal:{required:!1,tsType:{name:"boolean"},description:""},ref:{required:!1,tsType:{name:"ReactRef",raw:"React.Ref<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},description:""},type:{defaultValue:{value:"'text'",computed:!1},required:!1}},composes:["Omit"]};export{b as T};
