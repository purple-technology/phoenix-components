import{e as i}from"./iframe-22864007.js";import{B as S}from"./index-23fd3e1a.js";import{B as g}from"./ButtonStyles-b1115345.js";const b=({colorTheme:e="brand",size:n="md",iconAlignment:r="left",type:s="button",testId:m="Button",secondary:o,light:u,icon:a,loading:l,children:p,ref:c,...d})=>{const t=o??u,f={...d,type:s,size:n,colorTheme:e,secondary:t,icon:a};return i.createElement(g,{ref:c,"data-testid":m,...f},i.createElement(S,{loading:l,size:n,colorTheme:e,secondary:t,icon:a,iconAlignment:r},p))};b.__docgenInfo={description:"`Button` component supports all props from `ButtonHTMLAttributes<HTMLButtonElement>` interface.",methods:[],displayName:"Button",props:{ml:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Left margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than mx."},mr:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Right margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than mx."},mt:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Top margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than my."},mb:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Bottom margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than my."},mx:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Horizontal margin (shortcut for ml and mr) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},my:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Vertical margin (shortcut for mt and mb) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},m:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). Least specific margin prop."},colorTheme:{required:!1,tsType:{name:"ColorTheme"},description:"Theme of the button - background color",defaultValue:{value:"'brand'",computed:!1}},size:{required:!1,tsType:{name:"Sizing"},description:"Size of the button; affects padding, line-height, and font-size",defaultValue:{value:"'md'",computed:!1}},minimal:{required:!1,tsType:{name:"boolean"},description:"Minimal styling of the button - no background, border etc."},secondary:{required:!1,tsType:{name:"boolean"},description:"Secondary style button"},outline:{required:!1,tsType:{name:"boolean"},description:"Outline style button"},icon:{required:!1,tsType:{name:"union",raw:"PhoenixIconsOutlined | React.ReactElement | string",elements:[{name:"PhoenixIconsOutlined"},{name:"ReactReactElement",raw:"React.ReactElement"},{name:"string"}]},description:""},iconAlignment:{required:!1,tsType:{name:"IconAlignment"},description:"",defaultValue:{value:"'left'",computed:!1}},loading:{required:!1,tsType:{name:"boolean"},description:""},testId:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'Button'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:""},light:{required:!1,tsType:{name:"boolean"},description:'@deprecated Secondary style button. Please use current prop "secondary" instead. This prop will be removed in next major version.'},ref:{required:!1,tsType:{name:"ReactRef",raw:"React.Ref<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},description:""},type:{defaultValue:{value:"'button'",computed:!1},required:!1}},composes:["Omit"]};export{b as B};
