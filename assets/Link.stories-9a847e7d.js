import{s,C as p,e as a}from"./iframe-22864007.js";import{C as w,T as v}from"./Color-0aa54fb0.js";import{I as k}from"./IconAlignment-a51119ec.js";import{S as q,I,i as L,P as V}from"./index-15f66ba7.js";import{g as R}from"./helpers-4992d6b4.js";import{m as E,p as z}from"./SpacingStyles-a9a54458.js";const $=s.a`
	text-decoration: ${({noUnderline:e})=>e?" none":"underline"};
	color: ${R(!0)};
	cursor: pointer;
	${({bold:e,theme:n})=>e?`font-weight: ${n.tokens.ref.fontWeight.bold};`:""}

	&:hover,
	&:active,
	&:focus {
		text-decoration: ${({noUnderline:e})=>e?"underline":"none"};
	}

	${E}
	${z}
`,b=p`
	path {
		fill: ${({color:e,theme:n})=>e?e in w?n.tokens.color.text[e].primary:e in v?n.tokens.color.text[e]:e:n.tokens.color.text.brand.primary};
	}
	width: 1em;
	height: 1em;
	vertical-align: -0.15em;
`,M=s(q)`
	${b}
`,A=s(I)`
	${b}
`,P=s.span`
	${({children:e,icon:n,iconAlignment:i})=>e&&n?i==="left"?p`
						margin-inline-start: 0.4em;
				  `:p`
						margin-inline-end: 0.4em;
				  `:void 0}
`,x=({icon:e,color:n})=>e?L(e)?a.createElement(A,{icon:e,color:n}):typeof e=="string"?a.createElement(M,{src:e,color:n}):e:null,u=x;x.__docgenInfo={description:"",methods:[],displayName:"LinkIcon",props:{icon:{required:!1,tsType:{name:"union",raw:"PhoenixIconsOutlined | React.ReactElement | string",elements:[{name:"PhoenixIconsOutlined"},{name:"ReactReactElement",raw:"React.ReactElement"},{name:"string"}]},description:""},color:{required:!1,tsType:{name:"union",raw:"TextColor | ColorTheme | CSSColor",elements:[{name:"TextColor"},{name:"ColorTheme"},{name:"intersection",raw:"string & {}",elements:[{name:"string"},{name:"signature",type:"object",raw:"{}",signature:{properties:[]}}]}]},description:""}}};const l=({testId:e="Link",children:n,icon:i,iconAlignment:m="left",color:o,ref:C,...T})=>a.createElement($,{ref:C,"data-testid":e,$color:o,...T},m==="left"&&a.createElement(u,{icon:i,color:o}),a.createElement(P,{icon:!!i,iconAlignment:m},n),m==="right"&&a.createElement(u,{icon:i,color:o}));l.__docgenInfo={description:"`Link` component supports all props from `AnchorHTMLAttributes<HTMLAnchorElement>` interface.",methods:[],displayName:"Link",props:{testId:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'Link'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:""},ml:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Left margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than mx."},mr:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Right margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than mx."},mt:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Top margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than my."},mb:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Bottom margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than my."},mx:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Horizontal margin (shortcut for ml and mr) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},my:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Vertical margin (shortcut for mt and mb) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},m:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). Least specific margin prop."},pl:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Left padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than px."},pr:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Right padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than px."},pt:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Top padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than py."},pb:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Bottom padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than py."},px:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Horizontal padding (shortcut for pl and pr) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},py:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Vertical padding (shortcut for pt and pb) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},p:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). Least specific padding prop."},icon:{required:!1,tsType:{name:"union",raw:"PhoenixIconsOutlined | React.ReactElement | string",elements:[{name:"PhoenixIconsOutlined"},{name:"ReactReactElement",raw:"React.ReactElement"},{name:"string"}]},description:""},iconAlignment:{required:!1,tsType:{name:"IconAlignment"},description:"",defaultValue:{value:"'left'",computed:!1}},color:{required:!1,tsType:{name:"union",raw:"TextColor | ColorTheme | CSSColor",elements:[{name:"TextColor"},{name:"ColorTheme"},{name:"intersection",raw:"string & {}",elements:[{name:"string"},{name:"signature",type:"object",raw:"{}",signature:{properties:[]}}]}]},description:""},bold:{required:!1,tsType:{name:"boolean"},description:""},noUnderline:{required:!1,tsType:{name:"boolean"},description:""},ref:{required:!1,tsType:{name:"ReactRef",raw:"React.Ref<HTMLAnchorElement>",elements:[{name:"HTMLAnchorElement"}]},description:""}}};const B={component:l,argTypes:{icon:{options:V,control:"select"},iconAlignment:{options:k,control:"radio"},colorTheme:{options:[void 0,...w],control:"select"}}},c=e=>a.createElement(l,{...e});c.args={children:"Click me",iconAlignment:"left"};const r={args:{...c.args}},t={args:{...c.args,icon:"paper"}};var d,g,S;r.parameters={...r.parameters,docs:{...(d=r.parameters)==null?void 0:d.docs,source:{originalSource:`{
  args: {
    ...Template.args
  }
}`,...(S=(g=r.parameters)==null?void 0:g.docs)==null?void 0:S.source}}};var f,y,h;t.parameters={...t.parameters,docs:{...(f=t.parameters)==null?void 0:f.docs,source:{originalSource:`{
  args: {
    ...Template.args,
    icon: 'paper'
  }
}`,...(h=(y=t.parameters)==null?void 0:y.docs)==null?void 0:h.source}}};const G=["Link","WithIcon"];export{r as Link,t as WithIcon,G as __namedExportsOrder,B as default};
