import{s as t,C as u,e as n}from"./iframe-22864007.js";import{H as z}from"./index-191c0659.js";import{c as V,S as E,I as $,d as R}from"./index-15f66ba7.js";import{p as w,m as v}from"./SpacingStyles-a9a54458.js";import"./helpers-4992d6b4.js";import"./Color-0aa54fb0.js";const H=t.ul`
	list-style: none;
	margin: 0;
	min-width: 180px;
	text-align: start;

	${w}
	${v}
`,_=t.li`
	list-style: none;

	${w}
	${v}
`,k=u`
	display: flex;
	align-items: center;
	text-decoration: none;
	padding: 6px 7px;
	color: ${({theme:e,disabled:i,colorTheme:a})=>i?e.tokens.color.text.quaternary:a?e.tokens.color.text[a].primary:e.tokens.color.text.secondary};
	user-select: none;
	line-height: 20px;
	border-radius: ${({theme:e})=>e.tokens.menu.borderRadius.item};
	cursor: ${({disabled:e})=>e?"default":"pointer"};

	${({theme:e,disabled:i})=>i?void 0:u`
					&:hover {
						background: ${e.tokens.color.background.neutral.secondary};
					}
			  `}
`,P=t.button`
	${k};
	border: none;
	background: inherit;
	width: 100%;
	font-size: 14px;
	font-family: ${({theme:e})=>e.tokens.ref.fontFamily.base};
`,L=t.a`
	${k}
`,M=u`
	width: 20px;
	height: 20px;
	margin-inline-end: 8px;

	${({theme:e,icon:i,disabled:a,colorTheme:o})=>V(i)?"":`
					path {
						fill: ${a?e.tokens.color.text.quaternary:o?e.tokens.color.text[o].primary:e.tokens.color.text.secondary};
					}
			  `}
`,N=t(E)`
	${M}
`,B=t($)`
	${M}
`,l=({testId:e="Menu",...i})=>n.createElement(H,{p:"xxxs","data-testid":e,...i});l.__docgenInfo={description:"",methods:[],displayName:"Menu",props:{ml:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Left margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than mx."},mr:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Right margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than mx."},mt:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Top margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than my."},mb:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Bottom margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than my."},mx:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Horizontal margin (shortcut for ml and mr) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},my:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Vertical margin (shortcut for mt and mb) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},m:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). Least specific margin prop."},pl:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Left padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than px."},pr:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Right padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than px."},pt:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Top padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than py."},pb:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Bottom padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than py."},px:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Horizontal padding (shortcut for pl and pr) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},py:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Vertical padding (shortcut for pt and pb) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},p:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). Least specific padding prop."},testId:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'Menu'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:""}}};const T=e=>e.icon?R(e.icon)?n.createElement(B,{icon:e.icon,disabled:e.disabled,colorTheme:e.colorTheme}):typeof e.icon=="string"?n.createElement(N,{src:e.icon,disabled:e.disabled,colorTheme:e.colorTheme}):e.icon:null,O=T;T.__docgenInfo={description:"",methods:[],displayName:"MenuItemIcon",props:{icon:{required:!1,tsType:{name:"union",raw:"IconType | PhoenixIconsColored",elements:[{name:"union",raw:"PhoenixIconsOutlined | React.ReactElement | string",elements:[{name:"PhoenixIconsOutlined"},{name:"ReactReactElement",raw:"React.ReactElement"},{name:"string"}]},{name:"PhoenixIconsColored"}]},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},colorTheme:{required:!1,tsType:{name:"ColorTheme"},description:""}}};const r=({testId:e="MenuItem",onClick:i,children:a,icon:o,href:c,disabled:p,className:I,colorTheme:q,...d})=>{const S={onClick:(()=>p?void 0:i)(),disabled:p,...d},g=n.createElement(n.Fragment,null,n.createElement(O,{icon:o,disabled:p,colorTheme:q}),a);return n.createElement(_,{"data-testid":e,className:I,...d},c?n.createElement(L,{href:c,...S},g):n.createElement(P,{...S},g))};r.__docgenInfo={description:"",methods:[],displayName:"MenuItem",props:{ml:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Left margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than mx."},mr:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Right margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than mx."},mt:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Top margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than my."},mb:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Bottom margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than my."},mx:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Horizontal margin (shortcut for ml and mr) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},my:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Vertical margin (shortcut for mt and mb) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},m:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). Least specific margin prop."},pl:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Left padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than px."},pr:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Right padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than px."},pt:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Top padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than py."},pb:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Bottom padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than py."},px:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Horizontal padding (shortcut for pl and pr) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},py:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Vertical padding (shortcut for pt and pb) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},p:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). Least specific padding prop."},testId:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'MenuItem'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:""},target:{required:!1,tsType:{name:"string"},description:""},href:{required:!1,tsType:{name:"string"},description:""},onClick:{required:!1,tsType:{name:"MouseEventHandler",elements:[{name:"HTMLAnchorElement"}],raw:"MouseEventHandler<HTMLAnchorElement>"},description:""},icon:{required:!1,tsType:{name:"union",raw:"IconType | PhoenixIconsColored",elements:[{name:"union",raw:"PhoenixIconsOutlined | React.ReactElement | string",elements:[{name:"PhoenixIconsOutlined"},{name:"ReactReactElement",raw:"React.ReactElement"},{name:"string"}]},{name:"PhoenixIconsColored"}]},description:""},colorTheme:{required:!1,tsType:{name:"ColorTheme"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""}}};const K={component:l},s=e=>n.createElement(l,{...e},n.createElement(r,{onClick:e.hide},"No href item"),n.createElement(r,{href:"/",onClick:e.hide},"With href item"),n.createElement(r,{disabled:!0,href:"/",onClick:e.hide},"Disabled item"),n.createElement(z,{my:"3xs"}),n.createElement(r,{icon:"lock",onClick:e.hide},"Change password")),m=e=>n.createElement(r,{icon:"lock",...e,onClick:e.hide},"Change password");s.__docgenInfo={description:"",methods:[],displayName:"Menu"};m.__docgenInfo={description:"",methods:[],displayName:"MenuItem"};var y,b,h;s.parameters={...s.parameters,docs:{...(y=s.parameters)==null?void 0:y.docs,source:{originalSource:`args => <MenuComponent {...args}>
        <MenuItemComponent onClick={args.hide}>No href item</MenuItemComponent>
        <MenuItemComponent href="/" onClick={args.hide}>
            With href item
        </MenuItemComponent>
        <MenuItemComponent disabled href="/" onClick={args.hide}>
            Disabled item
        </MenuItemComponent>
        <HorizontalDivider my="3xs" />
        <MenuItemComponent icon="lock" onClick={args.hide}>
            Change password
        </MenuItemComponent>
    </MenuComponent>`,...(h=(b=s.parameters)==null?void 0:b.docs)==null?void 0:h.source}}};var f,x,C;m.parameters={...m.parameters,docs:{...(f=m.parameters)==null?void 0:f.docs,source:{originalSource:`args => <MenuItemComponent icon="lock" {...args} onClick={args.hide}>
        Change password
    </MenuItemComponent>`,...(C=(x=m.parameters)==null?void 0:x.docs)==null?void 0:C.source}}};const Q=["Menu","MenuItem"];export{s as Menu,m as MenuItem,Q as __namedExportsOrder,K as default};
