import{r as u,e as i}from"./iframe-22864007.js";import{a as l}from"./stories-5d325111.js";import{T as s}from"./index-223a013d.js";import"./Sizing-35dbcd46.js";import"./useFormControl-ca195f92.js";import"./check-9c2d93e5.js";import"./index-3434f921.js";import"./rtl-a2dddcc3.js";import"./index-15f66ba7.js";import"./helpers-4992d6b4.js";import"./Color-0aa54fb0.js";import"./SpacingStyles-a9a54458.js";const S={component:s,argTypes:l,args:{label:"Input Label",size:"md"}},e=t=>{const[n,p]=u.useState(t.value??"");return i.createElement(s,{...t,value:n,onChange:m=>p(m.target.value)})};e.__docgenInfo={description:"",methods:[],displayName:"TextInput"};var r,a,o;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`args => {
  const [value, setValue] = useState(args.value ?? '');
  return <TextInputComponent {...args} value={value} onChange={(e): void => setValue(e.target.value)} />;
}`,...(o=(a=e.parameters)==null?void 0:a.docs)==null?void 0:o.source}}};const V=["TextInput"];export{e as TextInput,V as __namedExportsOrder,S as default};
