import{g as o,e as r}from"./iframe-22864007.js";import{C as s}from"./index-e4460024.js";import{S as l}from"./index-c9cac8ea.js";var i={exports:{}};i.exports=a;i.exports.isMobile=a;i.exports.default=a;const m=/(android|bb\d+|meego).+mobile|armv7l|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series[46]0|samsungbrowser|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i,p=/CrOS/,d=/android|ipad|playbook|silk/i;function a(t){t||(t={});let e=t.ua;if(!e&&typeof navigator<"u"&&(e=navigator.userAgent),e&&e.headers&&typeof e.headers["user-agent"]=="string"&&(e=e.headers["user-agent"]),typeof e!="string")return!1;let n=m.test(e)&&!p.test(e)||!!t.tablet&&d.test(e);return!n&&t.tablet&&t.featureDetect&&navigator&&navigator.maxTouchPoints>1&&e.indexOf("Macintosh")!==-1&&e.indexOf("Safari")!==-1&&(n=!0),n}var c=i.exports;const u=o(c),f=({testId:t="Select",useNativeSelectOnMobile:e,...n})=>e&&u()?r.createElement(l,{testId:t,...n}):r.createElement(s,{testId:t,...n});f.__docgenInfo={description:"",methods:[],displayName:"Select",props:{testId:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'Select'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:""},label:{required:!1,tsType:{name:"string"},description:"Text displayed inside the input field"},success:{required:!1,tsType:{name:"boolean"},description:"Green border and checkmark visible"},warning:{required:!1,tsType:{name:"union",raw:"ReactElement | string",elements:[{name:"ReactElement"},{name:"string"}]},description:"Show yellow warning text and icon under the input"},error:{required:!1,tsType:{name:"union",raw:"ReactElement | string | boolean",elements:[{name:"ReactElement"},{name:"string"},{name:"boolean"}]},description:"Show red error text and icon under the input"},contentRight:{required:!1,tsType:{name:"union",raw:"string | React.ReactNode",elements:[{name:"string"},{name:"ReactReactNode",raw:"React.ReactNode"}]},description:"Content to display on the right in LTR and on the left in RTL mode"},helperText:{required:!1,tsType:{name:"string"},description:"Helper text to display when input is focused"},size:{required:!1,tsType:{name:"Sizing"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},focused:{required:!1,tsType:{name:"boolean"},description:""},minimal:{required:!1,tsType:{name:"boolean"},description:""},name:{required:!1,tsType:{name:"string"},description:""},options:{required:!1,tsType:{name:"Array",elements:[{name:"Option"}],raw:"Option[]"},description:""},onFocus:{required:!1,tsType:{name:"FocusEventHandler",elements:[{name:"union",raw:"HTMLInputElement | HTMLSelectElement",elements:[{name:"HTMLInputElement"},{name:"HTMLSelectElement"}]}],raw:"FocusEventHandler<HTMLInputElement | HTMLSelectElement>"},description:""},onBlur:{required:!1,tsType:{name:"FocusEventHandler",elements:[{name:"union",raw:"HTMLInputElement | HTMLSelectElement",elements:[{name:"HTMLInputElement"},{name:"HTMLSelectElement"}]}],raw:"FocusEventHandler<HTMLInputElement | HTMLSelectElement>"},description:""},reactSelectProps:{required:!1,tsType:{name:"Omit",elements:[{name:"ReactSelectProps",elements:[{name:"Option"},{name:"literal",value:"false"}],raw:"ReactSelectProps<Option, IsMulti>"},{name:"literal",value:"'theme'"}],raw:"Omit<ReactSelectProps<Option, IsMulti>, 'theme'>"},description:"Props to pass to react-select. These props will overwrite any other props from this component. See API docs here https://react-select.com/props"},preventSearch:{required:!1,tsType:{name:"boolean"},description:"If true, disables search functionality which is enabled by default."},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(option: Option | null) => void",signature:{arguments:[{type:{name:"union",raw:"Option | null",elements:[{name:"Option"},{name:"null"}]},name:"option"}],return:{name:"void"}}},description:""},value:{required:!1,tsType:{name:"union",raw:"Option | null",elements:[{name:"Option"},{name:"null"}]},description:""},useNativeSelectOnMobile:{required:!1,tsType:{name:"boolean"},description:""}}};export{f as S};
