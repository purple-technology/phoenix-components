import{e as n}from"./iframe-22864007.js";import{S as c}from"./index-c8a053b3.js";import{i as p}from"./index-15f66ba7.js";import{S as d,c as S,d as g,e as f,f as b}from"./ButtonStyles-b1115345.js";const o=e=>e.icon?p(e.icon)?n.createElement(d,{icon:e.icon,$size:e.size}):typeof e.icon=="string"?n.createElement(S,{src:e.icon,$size:e.size}):e.icon:null,m=o;o.__docgenInfo={description:"",methods:[],displayName:"ButtonIcon",props:{icon:{required:!1,tsType:{name:"union",raw:"PhoenixIconsOutlined | React.ReactElement | string",elements:[{name:"PhoenixIconsOutlined"},{name:"ReactReactElement",raw:"React.ReactElement"},{name:"string"}]},description:""},size:{required:!0,tsType:{name:"Sizing"},description:""}}};const s=({colorTheme:e="brand",size:i="md",loading:r,secondary:u,icon:t,iconAlignment:a,children:l})=>n.createElement(n.Fragment,null,r&&n.createElement(g,null,n.createElement(c,{size:i,colorTheme:e,light:!u})),n.createElement(f,{$loading:r},a==="left"&&n.createElement(m,{icon:t,size:i}),n.createElement(b,{icon:!!t,iconAlignment:a},l),a==="right"&&n.createElement(m,{icon:t,size:i}))),T=s;s.__docgenInfo={description:"",methods:[],displayName:"ButtonInner",props:{ml:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Left margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than mx."},mr:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Right margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than mx."},mt:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Top margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than my."},mb:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Bottom margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than my."},mx:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Horizontal margin (shortcut for ml and mr) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},my:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Vertical margin (shortcut for mt and mb) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},m:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). Least specific margin prop."},colorTheme:{required:!1,tsType:{name:"ColorTheme"},description:"Theme of the button - background color",defaultValue:{value:"'brand'",computed:!1}},size:{required:!1,tsType:{name:"Sizing"},description:"Size of the button; affects padding, line-height, and font-size",defaultValue:{value:"'md'",computed:!1}},minimal:{required:!1,tsType:{name:"boolean"},description:"Minimal styling of the button - no background, border etc."},secondary:{required:!1,tsType:{name:"boolean"},description:"Secondary style button"},outline:{required:!1,tsType:{name:"boolean"},description:"Outline style button"},icon:{required:!1,tsType:{name:"union",raw:"PhoenixIconsOutlined | React.ReactElement | string",elements:[{name:"PhoenixIconsOutlined"},{name:"ReactReactElement",raw:"React.ReactElement"},{name:"string"}]},description:""},iconAlignment:{required:!1,tsType:{name:"IconAlignment"},description:""},loading:{required:!1,tsType:{name:"boolean"},description:""}}};export{T as B};
