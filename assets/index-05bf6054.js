import{s as c,C as d,r as t,e as S}from"./iframe-22864007.js";import{b as g}from"./helpers-4992d6b4.js";import{c as f}from"./TextStyles-7697a8a1.js";const w=c.div`
	${f}

	line-height: ${({theme:i})=>g(i.tokens.text.lineHeight)};

	${({ellipsize:i})=>i?d`
					text-overflow: ellipsis;
					overflow: hidden;
					white-space: nowrap;
			  `:void 0}
`,h=({size:i="sm",color:s="primary",ellipsize:a=!1,element:m="div",testId:l="Text",...e})=>{const n=t.useRef(null),[u,p]=t.useState(e.title);return t.useEffect(()=>{var r;const o=a&&n.current&&n.current.scrollWidth>n.current.clientWidth;p(e.title&&e.title!==""?e.title:o&&((r=n.current)!=null&&r.textContent)?n.current.textContent:void 0)},[a,n,e.title,e.children]),S.createElement(w,{$size:i,$color:s,ellipsize:a,as:m,title:u,ref:n,"data-testid":l,...e})};h.__docgenInfo={description:"If paragraph is needed, use `Paragraph` component, as it uses looser line-height.",methods:[],displayName:"Text",props:{testId:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'Text'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:""},textAlign:{required:!1,tsType:{name:"TextAlignment"},description:""},color:{required:!1,tsType:{name:"union",raw:"TextColor | ColorTheme | CSSColor",elements:[{name:"TextColor"},{name:"ColorTheme"},{name:"intersection",raw:"string & {}",elements:[{name:"string"},{name:"signature",type:"object",raw:"{}",signature:{properties:[]}}]}]},description:"",defaultValue:{value:"'primary'",computed:!1}},bold:{required:!1,tsType:{name:"boolean"},description:""},semibold:{required:!1,tsType:{name:"boolean"},description:""},size:{required:!1,tsType:{name:"union",raw:"Sizing | CSSValue",elements:[{name:"Sizing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Text size - xs, sm, md, lg; or overriding these basic styles with any CSS value with valid unit (px, rem, % etc.)",defaultValue:{value:"'sm'",computed:!1}},pl:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Left padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than px."},pr:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Right padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than px."},pt:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Top padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than py."},pb:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Bottom padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than py."},px:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Horizontal padding (shortcut for pl and pr) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},py:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Vertical padding (shortcut for pt and pb) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},p:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Padding either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). Least specific padding prop."},ml:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Left margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than mx."},mr:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Right margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than mx."},mt:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Top margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than my."},mb:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Bottom margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). More specific than my."},mx:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Horizontal margin (shortcut for ml and mr) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},my:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Vertical margin (shortcut for mt and mb) either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px)."},m:{required:!1,tsType:{name:"union",raw:"Spacing | CSSValue",elements:[{name:"Spacing"},{name:"union",raw:"(string & {}) | number",elements:[{name:"unknown"},{name:"number"}]}]},description:"Margin either in Spacing sizes, any CSS value in valid units (px, rem, % etc.) or plain number (interpreted as px). Least specific margin prop."},ellipsize:{required:!1,tsType:{name:"boolean"},description:"Indicates that this component should be truncated with an ellipsis if it overflows its container. The `title` attribute will also be added when content overflows to show the full text of the children on hover.",defaultValue:{value:"false",computed:!1}},element:{required:!1,tsType:{name:"union",raw:"'div' | 'span'",elements:[{name:"literal",value:"'div'"},{name:"literal",value:"'span'"}]},description:"",defaultValue:{value:"'div'",computed:!1}},title:{required:!1,tsType:{name:"string"},description:"HTML title of the element. This title has priority over automatically generated title when `ellipsize` is enabled."}},composes:["HTMLAttributes"]};export{h as T};
